const Web3 = require('web3');
const web3 = new Web3(new Web3.providers.HttpProvider("http://127.0.0.1:7545"));

const express = require('express');
const app = express();
const port = 3000;

app.listen(port, () => {
  console.log("Application started and listening on port 3000");
})

app.use(express.static('public'));
app.use(express.json());

app.get('/accounts', async (req, res) => {
  const accounts = await web3.eth.getAccounts();
  res.json(accounts);
});

app.post('/bai1', async(req, res) => {
  const { address } = req.body;
  const ABI = [{"inputs":[],"name":"execute","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"n","type":"int256"}],"name":"isPerfect","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"perfects","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"}];
  const bytecode = '0x608060405234801561001057600080fd5b50610775806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806308ee4471146100465780636146195414610076578063d71647f614610094575b600080fd5b610060600480360381019061005b919061029e565b6100c4565b60405161006d91906103ab565b60405180910390f35b61007e6100e8565b60405161008b919061036e565b60405180910390f35b6100ae60048036038101906100a99190610271565b61019c565b6040516100bb9190610390565b60405180910390f35b600081815481106100d457600080fd5b906000526020600020016000915090505481565b60606000600290505b6103e88113610145576101038161019c565b156101325760008190806001815401808255809150506001900390600052602060002001600090919091909150555b808061013d90610634565b9150506100f1565b50600080548060200260200160405190810160405280929190818152602001828054801561019257602002820191906000526020600020905b81548152602001906001019080831161017e575b5050505050905090565b600080600190506000600290505b8381826101b791906104fd565b1361022e57600081856101ca919061067d565b141561021b578381826101dd91906104fd565b1461020b5780846101ee9190610493565b81836101fa91906103ff565b61020491906103ff565b915061021a565b808261021791906103ff565b91505b5b808061022690610634565b9150506101aa565b50828114801561023f575060018314155b915050919050565b60008135905061025681610711565b92915050565b60008135905061026b81610728565b92915050565b6000602082840312156102875761028661070c565b5b600061029584828501610247565b91505092915050565b6000602082840312156102b4576102b361070c565b5b60006102c28482850161025c565b91505092915050565b60006102d78383610350565b60208301905092915050565b60006102ee826103d6565b6102f881856103ee565b9350610303836103c6565b8060005b8381101561033457815161031b88826102cb565b9750610326836103e1565b925050600181019050610307565b5085935050505092915050565b61034a81610614565b82525050565b61035981610620565b82525050565b61036881610620565b82525050565b6000602082019050818103600083015261038881846102e3565b905092915050565b60006020820190506103a56000830184610341565b92915050565b60006020820190506103c0600083018461035f565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061040a82610620565b915061041583610620565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156104505761044f6106ae565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615610488576104876106ae565b5b828201905092915050565b600061049e82610620565b91506104a983610620565b9250826104b9576104b86106dd565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156104f2576104f16106ae565b5b828205905092915050565b600061050882610620565b915061051383610620565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610552576105516106ae565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561058f5761058e6106ae565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156105cc576105cb6106ae565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610609576106086106ae565b5b828202905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b600061063f82610620565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610672576106716106ae565b5b600182019050919050565b600061068882610620565b915061069383610620565b9250826106a3576106a26106dd565b5b828207905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61071a81610620565b811461072557600080fd5b50565b6107318161062a565b811461073c57600080fd5b5056fea264697066735822122035e7f8671e07c888132e08db385e84f1b006cec44b950c1282b19b8da03e71a164736f6c63430008070033';
  
  const contract = new web3.eth.Contract(ABI);

  contract
    .deploy({ data: bytecode })
    .send({ from: address, gas: 4700000 })
    .then(initContract => {
      initContract.methods.execute().call((err, data) => {
        if (err) {
          console.log(err);
        }

        res.send(data);
      });
    });
});

app.post('/bai2', async(req, res) => {
  const { n, address } = req.body;
  const ABI = [{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"count_letters","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"execute","outputs":[{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"uint256","name":"last_digit","type":"uint256"},{"internalType":"uint256","name":"first_digit","type":"uint256"},{"internalType":"uint256","name":"sum","type":"uint256"},{"internalType":"uint256","name":"reverser","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"find_first_digit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"find_last_digit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"reverse","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"sum_letters","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}];
  const bytecode = '0x608060405234801561001057600080fd5b5061080c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806330fd8c82146100675780637353320a1461009757806397d15425146100c7578063b1da646d146100f7578063cfc06c5514610127578063fe0d94c114610157575b600080fd5b610081600480360381019061007c9190610371565b61018b565b60405161008e91906103ad565b60405180910390f35b6100b160048036038101906100ac9190610371565b6101ce565b6040516100be91906103ad565b60405180910390f35b6100e160048036038101906100dc9190610371565b610270565b6040516100ee91906103ad565b60405180910390f35b610111600480360381019061010c9190610371565b6102c9565b60405161011e91906103ad565b60405180910390f35b610141600480360381019061013c9190610371565b6102df565b60405161014e91906103ad565b60405180910390f35b610171600480360381019061016c9190610371565b610314565b6040516101829594939291906103c8565b60405180910390f35b600080600190505b600181600a6101a291906104f5565b846101ad9190610471565b106101c55780806101bd906106d5565b915050610193565b80915050919050565b6000806000905060006101e08461018b565b90505b600181106102665760006001826101fa919061066d565b600a61020691906104f5565b856102119190610471565b9050808361021f919061041b565b925060018261022e919061066d565b600a61023a91906104f5565b816102459190610613565b85610250919061066d565b945050808061025e906106ab565b9150506101e3565b5080915050919050565b6000806000905060005b600084146102bf57600a8461028f919061071e565b905080600a8361029f9190610613565b6102a9919061041b565b9150600a846102b89190610471565b935061027a565b8192505050919050565b6000600a826102d8919061071e565b9050919050565b600060016102ec8361018b565b6102f6919061066d565b600a61030291906104f5565b8261030d9190610471565b9050919050565b60008060008060006103258661018b565b9450610330866102c9565b935061033b866102df565b9250610346866101ce565b915061035186610270565b905091939590929450565b60008135905061036b816107bf565b92915050565b600060208284031215610387576103866107ad565b5b60006103958482850161035c565b91505092915050565b6103a7816106a1565b82525050565b60006020820190506103c2600083018461039e565b92915050565b600060a0820190506103dd600083018861039e565b6103ea602083018761039e565b6103f7604083018661039e565b610404606083018561039e565b610411608083018461039e565b9695505050505050565b6000610426826106a1565b9150610431836106a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104665761046561074f565b5b828201905092915050565b600061047c826106a1565b9150610487836106a1565b9250826104975761049661077e565b5b828204905092915050565b6000808291508390505b60018511156104ec578086048111156104c8576104c761074f565b5b60018516156104d75780820291505b80810290506104e5856107b2565b94506104ac565b94509492505050565b6000610500826106a1565b915061050b836106a1565b92506105387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610540565b905092915050565b600082610550576001905061060c565b8161055e576000905061060c565b8160018114610574576002811461057e576105ad565b600191505061060c565b60ff8411156105905761058f61074f565b5b8360020a9150848211156105a7576105a661074f565b5b5061060c565b5060208310610133831016604e8410600b84101617156105e25782820a9050838111156105dd576105dc61074f565b5b61060c565b6105ef84848460016104a2565b925090508184048111156106065761060561074f565b5b81810290505b9392505050565b600061061e826106a1565b9150610629836106a1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156106625761066161074f565b5b828202905092915050565b6000610678826106a1565b9150610683836106a1565b9250828210156106965761069561074f565b5b828203905092915050565b6000819050919050565b60006106b6826106a1565b915060008214156106ca576106c961074f565b5b600182039050919050565b60006106e0826106a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156107135761071261074f565b5b600182019050919050565b6000610729826106a1565b9150610734836106a1565b9250826107445761074361077e565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b6107c8816106a1565b81146107d357600080fd5b5056fea26469706673582212206cdc9a30441330ad1a0c0ff921125d05cacdc09c002f2b9db4baf19ba3c5f66e64736f6c63430008070033';
  
  const contract = new web3.eth.Contract(ABI);

  contract
    .deploy({ data: bytecode })
    .send({ from: address, gas: 4700000 })
    .then(initContract => {
      initContract.methods.execute(n).call((err, data) => {
        if (err) {
          console.log(err);
        }

        res.send(data);
      });
    });
});

app.post('/bai3', async(req, res) => {
  const { a, b, address } = req.body;
  const ABI = [{"inputs":[{"internalType":"uint256","name":"a","type":"uint256"},{"internalType":"uint256","name":"b","type":"uint256"}],"name":"BCNN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"a","type":"uint256"},{"internalType":"uint256","name":"b","type":"uint256"}],"name":"execute","outputs":[{"internalType":"uint256","name":"ucln","type":"uint256"},{"internalType":"uint256","name":"bcnn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"a","type":"uint256"},{"internalType":"uint256","name":"b","type":"uint256"}],"name":"UCLN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}];
  const bytecode = '0x608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806331f806651461004657806336320c58146100765780635601eaea146100a6575b600080fd5b610060600480360381019061005b9190610168565b6100d7565b60405161006d91906101b7565b60405180910390f35b610090600480360381019061008b9190610168565b610107565b60405161009d91906101b7565b60405180910390f35b6100c060048036038101906100bb9190610168565b610131565b6040516100ce9291906101d2565b60405180910390f35b6000808214156100e957829050610101565b6100fe8283856100f99190610290565b6100d7565b90505b92915050565b600061011383836100d7565b828461011f919061022c565b61012991906101fb565b905092915050565b60008061013e84846100d7565b915061014a8484610107565b90509250929050565b60008135905061016281610324565b92915050565b6000806040838503121561017f5761017e61031f565b5b600061018d85828601610153565b925050602061019e85828601610153565b9150509250929050565b6101b181610286565b82525050565b60006020820190506101cc60008301846101a8565b92915050565b60006040820190506101e760008301856101a8565b6101f460208301846101a8565b9392505050565b600061020682610286565b915061021183610286565b925082610221576102206102f0565b5b828204905092915050565b600061023782610286565b915061024283610286565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561027b5761027a6102c1565b5b828202905092915050565b6000819050919050565b600061029b82610286565b91506102a683610286565b9250826102b6576102b56102f0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61032d81610286565b811461033857600080fd5b5056fea26469706673582212208ce1454ff71d0dffe10fcf6891b0627566951b5d1a33f39bd8c9fae64eb1770164736f6c63430008070033';
  
  const contract = new web3.eth.Contract(ABI);

  contract
    .deploy({ data: bytecode })
    .send({ from: address, gas: 4700000 })
    .then(initContract => {
      initContract.methods.execute(a, b).call((err, data) => {
        if (err) {
          console.log(err);
        }

        res.send(data);
      });
    });
});